@page "/inventory/inventory/list"
@using Blazorise.DataGrid
@using GDB.Web.BLL.Interface
@using GDB.Web.Shared.Inventory
@using System.Globalization
@using Radzen.Blazor

@inject IInventoryService InventoryService
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveServerRenderMode(prerender:false))


<div class="row">
    <div class="col-lg-6" align="left">
        <h2>Inventory List</h2>
    </div>
    <div class="col-lg-6" align="right">
        <button @onclick="Add" class="btn btn-primary">
            <i class="fa fa-plus" aria-hidden="true"></i>
            &nbsp;&nbsp;Add New
        </button>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        @if (inventories != null)
        {
            <RadzenDataGrid Data="inventories" AllowFiltering="true"  AllowPaging="true" AllowSorting="true" PageSize="20">
                <Columns>
                    <RadzenDataGridColumn TItem="InventoryViewModel" Property="InventoryId" Visible="false" Title="Id" />
                    <RadzenDataGridColumn TItem="InventoryViewModel" Property="ProductName" Title="Product" Width="450px"/>
                    <RadzenDataGridColumn TItem="InventoryViewModel" Property="Quantity" Title="Quantity" Width="150px" >
                        <Template Context="data">
                            <span style="color:@(data.Quantity < 0 ? "red" : "green")" >
                                <b>@data.Quantity</b>
                            </span>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="InventoryViewModel" Property="AvailableQuantity" Title="Available Quantity" Width="150px" >
                        <Template Context="data">
                            <span style="color:@(data.AvailableQuantity < 0 ? "red" : "green")">
                                <b>@data.AvailableQuantity</b>
                            </span>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="InventoryViewModel" Property="FoodPackingTypeDescription" Title="Food Packing Type" Width="150px" />

                    <RadzenDataGridColumn TItem="InventoryViewModel">
                        <Template Context="data">
                            <RadzenButton ButtonType="Radzen.ButtonType.Button"
                                          Icon="edit" Size="Radzen.ButtonSize.Small"
                                          Style="margin-right:5px;"
                                          Click="@(() => EditRow(data))" />
                        </Template>
                    </RadzenDataGridColumn>
                
                </Columns>
            </RadzenDataGrid>
        }
    </div>
</div>

@code {

    private List<InventoryViewModel> inventories { get; set; }

    protected override async Task OnInitializedAsync()
    {
        inventories = new List<InventoryViewModel>();
        inventories = await InventoryService.GetAllInventoryStock<List<InventoryViewModel>>();
    }

    private void Add()
    {
        NavigationManager.NavigateTo("/inventory/inventory/add");
    }
    protected void EditRow(InventoryViewModel inventoryViewModel)
    {
        NavigationManager.NavigateTo("/inventory/inventory/update" + "/" + Convert.ToString(inventoryViewModel.InventoryId));
    }
}

