@page "/customers/addCustomer"
@using GDB.Web.BLL.Interface
@using GDB.Web.Shared

@inject ICustomerService CustomerService
@inject IAdvertiseSourceService AdvertiseSourceService
@inject ILocationService LocationService
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject ILogger<AddCustomer> Logger
@rendermode @(new InteractiveAutoRenderMode(prerender:false))


<div class="container">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    Add Customer
                </div>
                <div class="card-body">
                    <div class="col-lg-12">
                        <EditForm Model="@customer" OnValidSubmit="HandleValidSubmit">
                            @if (errorMessages != null)
                            {
                                @foreach (var message in errorMessages)
                                {
                                    if (!string.IsNullOrEmpty(message))
                                    {
                                        <ul class="alert alert-danger mt-3 text-left">
                                            <li>@message</li>
                                        </ul>
                                    }
                                }
                            }
                            <div class="row rowMargin">
                                <div class="col-sm-3">
                                    First Name
                                </div>
                                <div class="col-sm-6">
                                    <InputText @bind-Value="customer.FirstName" class="form-control" />
                                </div>
                            </div>

                            <div class="row rowMargin">
                                <div class="col-sm-3">
                                    Last Name
                                </div>
                                <div class="col-sm-6">
                                    <InputText @bind-Value="customer.LastName" class="form-control" />
                                </div>
                            </div>

                            <div class="row rowMargin">
                                <div class="col-sm-3">
                                    Mobile Number
                                </div>
                                <div class="col-sm-6">
                                    <InputText @bind-Value="customer.MobileNumber" style="color:red;" class="form-control" />
                                </div>
                            </div>
                            <div class="row rowMargin">
                                <div class="col-sm-3">
                                    Location
                                </div>
                                <div class="col-sm-6">
                                    <select style="width:250px;font-size:13px;"
                                    @onchange="OnLocationSelectionIndexChanged"
                                    id="ddlStarters"
                                    name="StaterId"
                                    class="form-select">
                                        <option>@LocationInitialText</option>
                                        @if (locationViewModelsData != null)
                                        {
                                            @foreach (var item in locationViewModelsData)
                                            {
                                                <option value="@item.LocationId">@item.LocationName</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>

                            <div class="row rowMargin">
                                <div class="col-sm-3">
                                    Advertisement Source
                                </div>
                                <div class="col-sm-6">
                                    <select style="width:250px;font-size:13px;"
                                    @onchange="OnAdvertisementSourceSelectionIndexChanged"
                                    id="ddlStarters"
                                    name="StaterId"
                                    class="form-select">
                                        <option>@AdvertisementSourceInitialText</option>
                                        @if (advertiseSourceViewModelsData != null)
                                        {
                                            @foreach (var item in advertiseSourceViewModelsData)
                                            {
                                                <option value="@item.AdvertiseId">@item.AdvertiseDescription</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            @if (customer.AdvertiseSourceId == 4)
                            {
                                <div class="row rowMargin"  >
                                    <div class="col-sm-3">
                                        Friend Referral
                                    </div>
                                    <div class="col-sm-6">
                                        <InputText @bind-Value="customer.RefferedBy" class="form-control" />
                                    </div>
                                </div>
                            }                    


                            <div class="text-center">
                                <button type="submit" class="btn btn-primary">Add Customer</button>
                            </div>
                            @if (!string.IsNullOrEmpty(successMessage))
                            {
                                <div class="alert alert-success mt-3 text-center">@successMessage</div>
                            }
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private CustomerViewModel customer = new();
    private string[] errorMessages;
    private string successMessage = string.Empty;     
    private string SelectedOption = "visibility:hidden;";   
                       

    public string LocationInitialText { get; set; } = "---Select Location---";
    public string AdvertisementSourceInitialText { get; set; } = "---Select Source---";

    public IEnumerable<LocationViewModel> locationViewModelsData;
    public IEnumerable<AdvertiseSourceViewModel> advertiseSourceViewModelsData;

    protected override async Task OnInitializedAsync()
    {
        locationViewModelsData = await LocationService.GetAllLocations<List<LocationViewModel>>();
        advertiseSourceViewModelsData = await AdvertiseSourceService.GetAllAdvertiseSourceDetails<List<AdvertiseSourceViewModel>>();
    }

    private async Task OnLocationSelectionIndexChanged(ChangeEventArgs e)
    {
        customer.locationId = Convert.ToInt32(e.Value.ToString());       
        StateHasChanged();
    }
    private async Task OnAdvertisementSourceSelectionIndexChanged(ChangeEventArgs e)
    {
        customer.AdvertiseSourceId = Convert.ToInt32(e.Value.ToString());
        StateHasChanged();
    }
    private async void HandleValidSubmit()
    {
        errorMessages = Validations(customer);
        string validations = string.Join(" ", errorMessages);
        if ((validations == null) || (validations == ""))
        {
            var response = await CustomerService.Add(customer);
            if (response.Value)
            {
                Logger.LogInformation("Customer details are added successfully.");
                successMessage = "Customer details submitted successfully!";
                Reset();
            }
            else{
                Logger.LogInformation("Unable to add Customer.");
                successMessage = "Unable to create new customer.";            
            }            
        }
        else{
            validations = "";
        }
    }

    private async void Reset()
    {
        customer = new CustomerViewModel();
        errorMessages = [];
        StateHasChanged();
    }

    private string[] Validations(CustomerViewModel customerViewModel)
    {
        string[] result;
        string validationMessage = "";
        if (customerViewModel.FirstName == null)
        {
            validationMessage = "First Name: Please enter First Name";
        }
        if (customerViewModel.LastName == null)
        {
            validationMessage = validationMessage != null ? validationMessage +
                                ", " + Environment.NewLine + "Last Name: Please enter Last Name"
                                : "Last Name: Please enter Last Name";
        }
        if (customerViewModel.MobileNumber == null)
        {
            validationMessage = validationMessage != null
                                ? validationMessage + ", " + Environment.NewLine + "Mobile Number: Please enter Mobine Number"
                                : "Mobile Number: Please enter Mobine Number";
        }
        if (customerViewModel.locationId == null)
        {
            validationMessage = validationMessage != null
                                ? validationMessage + ", " + Environment.NewLine + "Location: Please select Location Name"
                                : "Location: Please select Location Name";
        }
        if (customerViewModel.AdvertiseSourceId == null)
        {
            validationMessage = validationMessage != null
                                ? validationMessage + ", " + Environment.NewLine + "Advertise Source: Please select Advertise Source"
                                : "Advertise Source: Please select Advertise Source";
        }
        return result = validationMessage.Split(',').Select(s => s.Trim()).ToArray();
    }
}
<style type="text/css">
    .rowMargin {
        margin-bottom: 10px;
    }

</style>
