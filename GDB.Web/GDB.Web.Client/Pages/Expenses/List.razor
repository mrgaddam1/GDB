@page "/expenses/list"
@using GDB.Web.BLL.Implementation
@using GDB.Web.BLL.Interface
@using GDB.Web.Shared
@using System.Globalization
@using Radzen
@using Radzen.Blazor

@inject IExpensesService ExpensesService
@inject IOrderService OrderService
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveServerRenderMode(prerender:false))

<div class="row">
    <div class="col-lg-6" align="left">
        <h2>Expenses</h2>
    </div>

    <div class="col-lg-6" align="right">    
        <button @onclick="AddNewExpenses" class="btn btn-success  fw-bold" style="margin-right:30px;">
            <i class="fa fa-plus" aria-hidden="true"></i>
            &nbsp;&nbsp;Add Expenses
        </button>
        <a href="/reports/reportsHome" class="text-warning text-decoration-none" style="padding-right:10px;">
            <i class="fas fa-chart-line" aria-hidden="true"></i>
            &nbsp;&nbsp;Click  Reports
        </a>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        @if (expensesViewModel.Count > 0)
        {
            <RadzenDataGrid class="radzen-grid radgen-grid-font"
                            Data="@expensesViewModel"
                            TItem="ExpensesViewModel"
                            EditMode="Radzen.DataGridEditMode.Single"
                            AllowFiltering="true"
                            AllowPaging="true"
                            AllowSorting="true"
                            PageSize="15"
                            GridLines="@GridLines"
                            CellRender="@OnCellRender">
                <Columns>
                    <RadzenDataGridColumn Property="ExpensesId" Title="Id" Width="100" Visible="false" />
                    <RadzenDataGridColumn Property="WeekNumber" Title="Week" Width="100px"  />
                    <RadzenDataGridColumn Property="GroceryDescription" Title="Grocery Description" Width="300px" />
                    <RadzenDataGridColumn Property="QuantityDescription" Title="Quantity Description" Width="300px" />
                    <RadzenDataGridColumn Property="StoreName" Title="Store Name" Width="250px" />
                    <RadzenDataGridColumn Property="ExpensesAmount" Title="Amount" Width="120px">
                        <Template Context="data">
                            <span style="color:blue;font-weight:600;">
                                @data.ExpensesAmount.ToString("C", CultureInfo.CreateSpecificCulture("en-GB"))
                            </span>
                        </Template>
                        <FooterTemplate>
                            <span style="color:red;font-weight:600;">
                                <b>Total: @expensesViewModel.Sum(t => t.ExpensesAmount).ToString("C", CultureInfo.CreateSpecificCulture("en-GB"))</b>
                            </span>
                        </FooterTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn Property="ExpensesDate" Title="Expenses Date" Width="120px">
                        <Template Context="data">
                            @data.ExpensesDate.Value.ToString("dd/MM/yyyy")
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="ExpensesViewModel" Width="120px">
                        <Template Context="data">
                            <RadzenButton ButtonType="Radzen.ButtonType.Button"
                                          Icon="edit" Size="Radzen.ButtonSize.Small"
                                          Style="margin-right:5px;"
                                          Click="@(() => EditRow(data))" />
                        </Template>
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
        }
    </div>
     
</div>

@code {
    public List<ExpensesViewModel> expensesViewModel { get; set; }
    public int CurrentWeekId { get; set; }
    Radzen.DataGridGridLines GridLines = Radzen.DataGridGridLines.Both;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            expensesViewModel = new List<ExpensesViewModel>();
            expensesViewModel = await ExpensesService.GetAllExpenses<List<ExpensesViewModel>>();
            CurrentWeekId = await OrderService.GetMaxWeekId<int>();
        }
        catch (Exception ex)
        {
            string errorMessage = ex.Message;
        }
    }
    private void AddNewExpenses()
    {
        NavigationManager.NavigateTo("/expenses/add");
    }
    void EditRow(ExpensesViewModel expensesViewModel)
    {
        NavigationManager.NavigateTo("/expenses/updateExpenses" + "/" + Convert.ToString(expensesViewModel.ExpensesId));
    }

    void OnCellRender(DataGridCellRenderEventArgs<ExpensesViewModel> args)
    {
        if (args.Column.Property == "StoreName")
        {
            if (args.Data.StoreName == "Icenland")
            {
                args.Attributes["style"] = "color:white;font-weight:bold;background-color:deepskyblue;";
            }
            else if (args.Data.StoreName == "Kent Cash and Carry - Near Nissan Local")
            {
                args.Attributes["style"] = "color:#842029;font-weight:bold;background-color:#d7d1fa !important;";
            }
            else if (args.Data.StoreName == "London Cash and Carry - Chatham")
            {
                args.Attributes["style"] = "color:black;font-weight:bold;background-color:#d3d9de !important;";
            }
            else if (args.Data.StoreName == "London Cash and Carry - Gillingham")
            {
                args.Attributes["style"] = "color:#FFFFFF;font-weight:bold;background-color:rgb(255, 165, 0);";
            }
            else if (args.Data.StoreName == "New Season Cash and Carry Near by EE")
            {
                args.Attributes["style"] = "color:#842029;background-color:#FFFFE0 !important;";
            }
            else if (args.Data.StoreName == "Kent Cash and Carry - Near PostOffice")
            {
                args.Attributes["style"] = "color:#842029;background-color:lightcoral; !important;";
            }
            else if (args.Data.StoreName == "Nissan Local")
            {
                args.Attributes["style"] = "color:#842029;background-color:#FF7F7F !important;";
            }
            else if (args.Data.StoreName == "Royal Stores")
            {
                args.Attributes["style"] = "color:#FFFFFF;font-weight:bold;background-color:lightblue;";
            }
            else if (args.Data.StoreName == "General")
            {
                args.Attributes["style"] = "color:#FFFFFF;font-weight:bold;background-color:lightsalmon;";
            }
        }
    }


}
