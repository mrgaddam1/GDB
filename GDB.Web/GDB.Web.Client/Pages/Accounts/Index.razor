@page "/accounts/list"
@using Blazorise.DataGrid
@using GDB.Web.BLL.Interface
@using GDB.Web.Shared
@using System.Globalization
@using Radzen.Blazor

@inject IAccountService AccountService
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveServerRenderMode(prerender:false))


<div class="col-lg-6">
    <table>
        <tr>
            <td>
                <h2>Accounts</h2>
            </td>
            <td style="text-align:right;">               
                    &nbsp;&nbsp;               
            </td>
        </tr>
        <tr style="padding-top:-5px;vertical-align:top;">
            <td colspan="2">
                @if (accountsData != null)
                {
                    <RadzenDataGrid Data="accountsData" AllowFiltering="true" AllowPaging="true" AllowSorting="true" PageSize="15">
                        <Columns>
                            <RadzenDataGridColumn TItem="AccountsViewModel" Property="WeekId" Title="WeekId" />
                            <RadzenDataGridColumn TItem="AccountsViewModel" Property="TotalProfits" Title="Total Receivables"  >
                                <Template Context="data">
                                    <span style="color:blue;font-weight:600;">
                                          @data.TotalProfits.ToString("C", CultureInfo.CreateSpecificCulture("en-GB"))
                                    </span>
                                </Template>
                                <FooterTemplate>
                                    <span style="color:blue;font-weight:600;">
                                        <b>Total: @accountsData.Sum(t => t.TotalProfits).ToString("C", CultureInfo.CreateSpecificCulture("en-GB"))</b>
                                    </span>
                                </FooterTemplate>
                            </RadzenDataGridColumn>

                            <RadzenDataGridColumn TItem="AccountsViewModel" Property="TotalExpenses" Title="Total Expenses" >
                                <Template Context="data">
                                    <span style="color:red;font-weight:600;">
                                    @data.TotalExpenses.ToString("C", CultureInfo.CreateSpecificCulture("en-GB"))
                                    </span>
                                </Template>
                                <FooterTemplate>
                                    <span style="color:red;font-weight:600;">
                                        <b>Total: @accountsData.Sum(t => t.TotalExpenses).ToString("C", CultureInfo.CreateSpecificCulture("en-GB"))</b>
                                    </span>
                                </FooterTemplate>

                            </RadzenDataGridColumn>   
                            <RadzenDataGridColumn TItem="AccountsViewModel" Property="NetProfit" Title="Net Profit"  >
                                <Template Context="data">
                                    <span style="font-weight:bold;color:@(data.NetProfit < 0 ? "red" : "green")">
                                        <b>@data.NetProfit.ToString("C", CultureInfo.CreateSpecificCulture("en-GB"))</b>
                                    </span>
                                </Template>
                                <FooterTemplate>
                                    <span style="color:blue;font-weight:600;">
                                    <b>Total: @accountsData.Sum(t => t.NetProfit).ToString("C", CultureInfo.CreateSpecificCulture("en-GB"))</b>
                                    </span>
                                </FooterTemplate>
                            </RadzenDataGridColumn>
                        </Columns>
                    </RadzenDataGrid>
                }
            </td>
        </tr>
    </table>
</div>
@* @data.NetProfit.ToString("C", CultureInfo.CreateSpecificCulture("en-GB")) *@
@code {

    private List<AccountsViewModel> accountsData { get; set; }

    protected override async Task OnInitializedAsync()
    {
        accountsData = new List<AccountsViewModel>();
        accountsData = await AccountService.GetAllAccounts();
    }
   
}

